{% set version = "1.46.4" %}

package:
  name: grpc-split
  version: {{ version }}

source:
  url: https://github.com/grpc/grpc/archive/v{{ version }}.tar.gz
  sha256: e266aa0d9d9cddb876484a370b94f468248594a96ca0b6f87c21f969db2b8c5b
  patches:
    - force-protoc-executable.patch
    - patches-grpcio/0001-Monkey-patch-distutils.ccompiler.spawn-to-elide-std-.patch
    - patches-grpcio/0002-Link-against-grpc.patch
    - patches-grpcio/0003-windows-ssl-lib-names.patch  # [win]
    - patches-grpcio/0001-fix-win-commands.patch       # [win]
    - patches-grpcio/0001-fix-win-setup.patch          # [win]

build:
  number: 3

outputs:
  - name: grpc-cpp
    script: build-cpp.sh   # [not win]
    script: build-cpp.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage('grpc-cpp', max_pin='x.x') }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake >=3.5.1
        # `protoc` is also used for building
        - libprotobuf
        - ninja
        # We need all host deps also in build for cross-compiling
        - libabseil 20211102.0   # [build_platform != target_platform]
        - c-ares      # [build_platform != target_platform]
        - re2         # [build_platform != target_platform]
        - openssl     # [build_platform != target_platform]
        - zlib        # [build_platform != target_platform]
      host:
        - libabseil 20211102.0                 # [unix]
        # windows not ready for C++17 of shared abseil builds yet;
        # keep one line unpinned for migrator to pick it up
        - libabseil-static 20211102.0          # [win]
        - libabseil-static =20211102.0=cxx11*  # [win]
        - c-ares
        - libprotobuf
        - re2
        - openssl
        - zlib
      run:
        - ucrt  # [win]
        # the following should not be necessary, but grpc currently
        # sets zlib & abseil as non-private
        - libabseil-static =20211102.0=cxx11*  # [win]
        - zlib
    test:
      requires:
        # cmake needs compiler to be able to run package detection, see
        # https://discourse.cmake.org/t/questions-about-find-package-cli-msvc/6194
        - {{ compiler('c') }}
        - cmake
        - make   # [linux]
      files:
        - cf_test/
      commands:
        - cd cf_test
        - cmake $CMAKE_ARGS .   # [unix and (build_platform == target_platform)]
        - cmake %CMAKE_ARGS% .  # [win]

  - name: grpcio
    script: build-grpcio.sh   # [not win]
    script: build-grpcio.bat  # [win]
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - cython                                 # [build_platform != target_platform]
        - libabseil 20211102.0                   # [build_platform != target_platform]
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      host:
        - python
        - pip
        - setuptools
        - cython
        - six >=1.6.0
        - libabseil 20211102.0                 # [unix]
        # windows not ready for C++17 of shared abseil builds yet;
        # keep one line unpinned for migrator to pick it up
        - libabseil-static 20211102.0          # [win]
        - libabseil-static =20211102.0=cxx11*  # [win]
        - {{ pin_subpackage('grpc-cpp', exact=True) }}
        - c-ares
        - libprotobuf
        - re2
        - openssl
        - pthread-stubs                               # [linux]
      run:
        - python
        - setuptools
        - six >=1.6.0
        - {{ pin_subpackage('grpc-cpp', exact=True) }}
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.9") }}  # [osx and x86_64]
    test:
      files:
        - grpcio_distribtest.py
      requires:
        - pip
      imports:
        - grpc
        - grpc._cython
        - grpc._cython._cygrpc
        - grpc.beta
        - grpc.framework
        - grpc.framework.common
        - grpc.framework.foundation
        - grpc.framework.interfaces
        - grpc.framework.interfaces.base
        - grpc.framework.interfaces.face
      commands:
        - python -m pip check
        - python grpcio_distribtest.py

about:
  home: https://grpc.io/
  license: Apache-2.0
  license_family: APACHE
  license_file:
    - LICENSE
    # due to static linkage on windows (also Apache-2.0)
    - ABSEIL_LICENSE  # [win]
  summary: gRPC - A high-performance, open-source universal RPC framework
  description: |
    gRPC is a modern, open source, high-performance remote procedure call
    (RPC) framework that can run anywhere. gRPC enables client and server
    applications to communicate transparently, and simplifies the building
    of connected systems.

    This package contains the gRPC C++ libraries and header files, as well
    as the code generation plugins.
  doc_url: https://grpc.io/docs/
  dev_url: https://github.com/grpc/grpc

extra:
  recipe-maintainers:
    - pitrou
    - xhochy
    - wesm
    - h-vetinari
    - mariusvniekerk
  feedstock-name: grpc-cpp
