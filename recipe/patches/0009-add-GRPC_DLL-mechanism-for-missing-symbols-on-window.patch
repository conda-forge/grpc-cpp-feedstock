From b5c9ecccfda0fdf1ec65c101ff2597990205b8d9 Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Mon, 12 Sep 2022 18:06:00 +0200
Subject: [PATCH 9/9] add GRPC_DLL mechanism for missing symbols on windows

Co-Authored-By: Isuru Fernando <isuruf@gmail.com>
---
 CMakeLists.txt                            |  5 +++++
 include/grpc/impl/codegen/port_platform.h | 19 +++++++++++++++++++
 src/core/lib/gprpp/fork.h                 |  2 +-
 third_party/upb/upb/upb.h                 | 11 ++++++++++-
 4 files changed, 35 insertions(+), 2 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 657421e605..07ebfc6b46 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -2373,6 +2373,11 @@ if(_gRPC_PLATFORM_IOS OR _gRPC_PLATFORM_MAC)
   target_link_libraries(grpc PUBLIC "-framework CoreFoundation")
 endif()
 
+if(WIN32 AND MSVC AND BUILD_SHARED_LIBS)
+  # More details in include/grpc/impl/codegen/port_platform.h
+  target_compile_definitions(grpc INTERFACE grpc_IMPORTS)
+endif()
+
 foreach(_hdr
   include/grpc/byte_buffer.h
   include/grpc/byte_buffer_reader.h
diff --git a/include/grpc/impl/codegen/port_platform.h b/include/grpc/impl/codegen/port_platform.h
index ae0e35cfb7..4124b7a75c 100644
--- a/include/grpc/impl/codegen/port_platform.h
+++ b/include/grpc/impl/codegen/port_platform.h
@@ -89,6 +89,25 @@
 #undef GRPC_NOMINMAX_WAS_NOT_DEFINED
 #undef NOMINMAX
 #endif /* GRPC_WIN32_LEAN_AND_MEAN_WAS_NOT_DEFINED */
+
+// GPRC_DLL
+// inspired by https://github.com/abseil/abseil-cpp/blob/20220623.1/absl/base/config.h#L730-L747
+//
+// When building gRPC as a DLL, this macro expands to `__declspec(dllexport)`
+// so we can annotate symbols appropriately as being exported. When used in
+// headers consuming a DLL, this macro expands to `__declspec(dllimport)` so
+// that consumers know the symbol is defined inside the DLL. In all other cases,
+// the macro expands to nothing.
+// Note: grpc_EXPORTS is set by CMake when building the DLL for target grpc
+//       grpc_IMPORTS is set by us as part of the interface for consumers of the DLL
+#if defined(grpc_EXPORTS)
+#define GRPC_DLL __declspec(dllexport)
+#elif defined(grpc_IMPORTS)
+#define GRPC_DLL __declspec(dllimport)
+#else
+#define GRPC_DLL
+#endif // defined(grpc_EXPORTS)
+
 #endif /* defined(_WIN64) || defined(WIN64) || defined(_WIN32) || \
           defined(WIN32) */
 
diff --git a/src/core/lib/gprpp/fork.h b/src/core/lib/gprpp/fork.h
index d6ef16130a..46b067c140 100644
--- a/src/core/lib/gprpp/fork.h
+++ b/src/core/lib/gprpp/fork.h
@@ -35,7 +35,7 @@ class ExecCtxState;
 class ThreadState;
 }  // namespace internal
 
-class Fork {
+class GRPC_DLL Fork {
  public:
   typedef void (*child_postfork_func)(void);
 
diff --git a/third_party/upb/upb/upb.h b/third_party/upb/upb/upb.h
index e074911e3b..1b7c74dd58 100644
--- a/third_party/upb/upb/upb.h
+++ b/third_party/upb/upb/upb.h
@@ -135,7 +135,16 @@ UPB_INLINE void upb_free(upb_alloc* alloc, void* ptr) {
 
 /* The global allocator used by upb.  Uses the standard malloc()/free(). */
 
-extern upb_alloc upb_alloc_global;
+// More details in include/grpc/impl/codegen/port_platform.h
+#if defined(grpc_EXPORTS)
+#define GRPC_DLL __declspec(dllexport)
+#elif defined(grpc_IMPORTS)
+#define GRPC_DLL __declspec(dllimport)
+#else
+#define GRPC_DLL
+#endif // defined(grpc_EXPORTS)
+
+GRPC_DLL extern upb_alloc upb_alloc_global;
 
 /* Functions that hard-code the global malloc.
  *
-- 
2.37.0.windows.1

