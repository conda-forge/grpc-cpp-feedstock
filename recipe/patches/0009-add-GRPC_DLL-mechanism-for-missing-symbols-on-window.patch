From a9728707f2f1b5cff21e8c1efc7dfdd1952ab643 Mon Sep 17 00:00:00 2001
From: Isuru Fernando <isuruf@gmail.com>
Date: Sat, 22 Oct 2022 01:21:56 -0500
Subject: [PATCH 2/3] add UPB_DLL mechanism for missing symbols on windows

Co-Authored-By: "H. Vetinari" <h.vetinari@gmx.com>
---
 CMakeLists.txt                   |  4 ++++
 third_party/upb/upb/port_def.inc | 18 ++++++++++++++++++
 third_party/upb/upb/upb.c        |  2 +-
 third_party/upb/upb/upb.h        |  2 +-
 4 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 657421e..6cf7b48 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4218,6 +4218,10 @@ if(WIN32 AND MSVC)
   set_target_properties(upb PROPERTIES COMPILE_PDB_NAME "upb"
     COMPILE_PDB_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}"
   )
+  set_target_properties(upb PROPERTIES DEFINE_SYMBOL "UPB_DLL_EXPORTS")
+  if(BUILD_SHARED_LIBS)
+    target_compile_definitions(upb INTERFACE UPB_DLL_IMPORTS)
+  endif()
   if(gRPC_INSTALL)
     install(FILES ${CMAKE_CURRENT_BINARY_DIR}/upb.pdb
       DESTINATION ${gRPC_INSTALL_LIBDIR} OPTIONAL
diff --git a/third_party/upb/upb/port_def.inc b/third_party/upb/upb/port_def.inc
index 2b240ff..5899039 100644
--- a/third_party/upb/upb/port_def.inc
+++ b/third_party/upb/upb/port_def.inc
@@ -259,3 +259,21 @@ void __asan_unpoison_memory_region(void const volatile *addr, size_t size);
 #else
 #define UPB_TREAT_PROTO2_ENUMS_LIKE_PROTO3 0
 #endif
+
+// UPB_DLL
+// inspired by https://github.com/abseil/abseil-cpp/blob/20220623.1/absl/base/config.h#L730-L747
+//
+// When building upb as a DLL, this macro expands to `__declspec(dllexport)`
+// so we can annotate symbols appropriately as being exported. When used in
+// headers consuming a DLL, this macro expands to `__declspec(dllimport)` so
+// that consumers know the symbol is defined inside the DLL. In all other cases,
+// the macro expands to nothing.
+// Note: UPB_DLL_EXPORTS is set in CMakeLists.txt when building shared upb
+//       UPB_DLL_IMPORTS is set by us as part of the interface for consumers of the DLL
+#if defined(UPB_DLL_EXPORTS)
+#define UPB_DLL __declspec(dllexport)
+#elif defined(UPB_DLL_IMPORTS)
+#define UPB_DLL __declspec(dllimport)
+#else
+#define UPB_DLL
+#endif // defined(UPB_DLL_EXPORTS)
diff --git a/third_party/upb/upb/upb.c b/third_party/upb/upb/upb.c
index 55730bb..579635b 100644
--- a/third_party/upb/upb/upb.c
+++ b/third_party/upb/upb/upb.c
@@ -112,7 +112,7 @@ static uintptr_t upb_cleanup_metadata(uint32_t* cleanup,
   return (uintptr_t)cleanup | has_initial_block;
 }
 
-upb_alloc upb_alloc_global = {&upb_global_allocfunc};
+UPB_DLL upb_alloc upb_alloc_global = {&upb_global_allocfunc};
 
 /* upb_Arena ******************************************************************/
 
diff --git a/third_party/upb/upb/upb.h b/third_party/upb/upb/upb.h
index e074911..29e8a7b 100644
--- a/third_party/upb/upb/upb.h
+++ b/third_party/upb/upb/upb.h
@@ -135,7 +135,7 @@ UPB_INLINE void upb_free(upb_alloc* alloc, void* ptr) {
 
 /* The global allocator used by upb.  Uses the standard malloc()/free(). */
 
-extern upb_alloc upb_alloc_global;
+UPB_DLL extern upb_alloc upb_alloc_global;
 
 /* Functions that hard-code the global malloc.
  *
-- 
2.37.3

