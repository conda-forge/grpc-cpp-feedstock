From 2a13446a8ba1ca096d2701039267b82c531f924c Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Fri, 14 Mar 2025 12:27:58 +1100
Subject: [PATCH 16/16] add some GRPCXX_DLL exports for symbols needed by gcp

---
 include/grpcpp/impl/rpc_service_method.h | 3 ++-
 include/grpcpp/support/client_callback.h | 4 ++--
 include/grpcpp/support/method_handler.h  | 2 +-
 3 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/include/grpcpp/impl/rpc_service_method.h b/include/grpcpp/impl/rpc_service_method.h
index 1b9911eca4..f551a7d606 100644
--- a/include/grpcpp/impl/rpc_service_method.h
+++ b/include/grpcpp/impl/rpc_service_method.h
@@ -19,6 +19,7 @@
 #ifndef GRPCPP_IMPL_RPC_SERVICE_METHOD_H
 #define GRPCPP_IMPL_RPC_SERVICE_METHOD_H
 
+#include <grpc/support/port_platform.h>
 #include <grpcpp/impl/rpc_method.h>
 #include <grpcpp/support/byte_buffer.h>
 #include <grpcpp/support/config.h>
@@ -86,7 +87,7 @@ class MethodHandler {
 class RpcServiceMethod : public RpcMethod {
  public:
   /// Takes ownership of the handler
-  RpcServiceMethod(const char* name, RpcMethod::RpcType type,
+  GRPCXX_DLL RpcServiceMethod(const char* name, RpcMethod::RpcType type,
                    MethodHandler* handler)
       : RpcMethod(name, type),
         server_tag_(nullptr),
diff --git a/include/grpcpp/support/client_callback.h b/include/grpcpp/support/client_callback.h
index b3818eada6..f10fcf4d18 100644
--- a/include/grpcpp/support/client_callback.h
+++ b/include/grpcpp/support/client_callback.h
@@ -49,7 +49,7 @@ class RpcMethod;
 template <class InputMessage, class OutputMessage,
           class BaseInputMessage = InputMessage,
           class BaseOutputMessage = OutputMessage>
-void CallbackUnaryCall(grpc::ChannelInterface* channel,
+GRPCXX_DLL void CallbackUnaryCall(grpc::ChannelInterface* channel,
                        const grpc::internal::RpcMethod& method,
                        grpc::ClientContext* context,
                        const InputMessage* request, OutputMessage* result,
@@ -1203,7 +1203,7 @@ class ClientCallbackUnaryImpl final : public ClientCallbackUnary {
   std::atomic<intptr_t> callbacks_outstanding_{2};
 };
 
-class ClientCallbackUnaryFactory {
+GRPCXX_DLL class ClientCallbackUnaryFactory {
  public:
   template <class Request, class Response, class BaseRequest = Request,
             class BaseResponse = Response>
diff --git a/include/grpcpp/support/method_handler.h b/include/grpcpp/support/method_handler.h
index a61843bdb8..3791d5a78c 100644
--- a/include/grpcpp/support/method_handler.h
+++ b/include/grpcpp/support/method_handler.h
@@ -99,7 +99,7 @@ template <class ServiceType, class RequestType, class ResponseType,
           class BaseResponseType = ResponseType>
 class RpcMethodHandler : public grpc::internal::MethodHandler {
  public:
-  RpcMethodHandler(
+  GRPCXX_DLL RpcMethodHandler(
       std::function<grpc::Status(ServiceType*, grpc::ServerContext*,
                                  const RequestType*, ResponseType*)>
           func,
