From e0bff5ae140f3a1d1544449750581a5f7f16b1ee Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Fri, 9 Jun 2023 17:03:08 +1100
Subject: [PATCH 11/16] put some grpc::experimental classes needed by arrow in
 DLL

also provide implementation for destructor of CertificateProviderInterface;
I keep coming back to https://stackoverflow.com/a/57504289/2965879...
---
 include/grpcpp/security/tls_certificate_provider.h | 10 +++++-----
 src/cpp/common/tls_certificate_provider.cc         |  2 ++
 2 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/include/grpcpp/security/tls_certificate_provider.h b/include/grpcpp/security/tls_certificate_provider.h
index ce9df5aa9c..44264b29c6 100644
--- a/include/grpcpp/security/tls_certificate_provider.h
+++ b/include/grpcpp/security/tls_certificate_provider.h
@@ -32,16 +32,16 @@ namespace experimental {
 // Interface for a class that handles the process to fetch credential data.
 // Implementations should be a wrapper class of an internal provider
 // implementation.
-class CertificateProviderInterface {
+class GRPCXX_DLL CertificateProviderInterface {
  public:
-  virtual ~CertificateProviderInterface() = default;
+  virtual ~CertificateProviderInterface();
   virtual grpc_tls_certificate_provider* c_provider() = 0;
 };
 
 // A struct that stores the credential data presented to the peer in handshake
 // to show local identity. The private_key and certificate_chain should always
 // match.
-struct IdentityKeyCertPair {
+struct GRPCXX_DLL IdentityKeyCertPair {
   std::string private_key;
   std::string certificate_chain;
 };
@@ -49,7 +49,7 @@ struct IdentityKeyCertPair {
 // A basic CertificateProviderInterface implementation that will load credential
 // data from static string during initialization. This provider will always
 // return the same cert data for all cert names, and reloading is not supported.
-class StaticDataCertificateProvider : public CertificateProviderInterface {
+class GRPCXX_DLL StaticDataCertificateProvider : public CertificateProviderInterface {
  public:
   StaticDataCertificateProvider(
       const std::string& root_certificate,
@@ -84,7 +84,7 @@ class StaticDataCertificateProvider : public CertificateProviderInterface {
 //   then renaming the new directory to the original name of the old directory.
 //   2)  using a symlink for the directory. When need to change, put new
 //   credential data in a new directory, and change symlink.
-class FileWatcherCertificateProvider final
+class GRPCXX_DLL FileWatcherCertificateProvider final
     : public CertificateProviderInterface {
  public:
   // Constructor to get credential updates from root and identity file paths.
diff --git a/src/cpp/common/tls_certificate_provider.cc b/src/cpp/common/tls_certificate_provider.cc
index c51c0ea589..5ee9b50e16 100644
--- a/src/cpp/common/tls_certificate_provider.cc
+++ b/src/cpp/common/tls_certificate_provider.cc
@@ -24,6 +24,8 @@
 namespace grpc {
 namespace experimental {
 
+CertificateProviderInterface::~CertificateProviderInterface() {};
+
 StaticDataCertificateProvider::StaticDataCertificateProvider(
     const std::string& root_certificate,
     const std::vector<IdentityKeyCertPair>& identity_key_cert_pairs) {
